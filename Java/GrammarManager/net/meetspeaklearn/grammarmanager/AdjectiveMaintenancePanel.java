/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package net.meetspeaklearn.grammarmanager;

/**
 *
 * @author steve
 */
public class AdjectiveMaintenancePanel extends javax.swing.JFrame {
    private static AdjectiveMaintenancePanel instance = null;
    
    public static AdjectiveMaintenancePanel get(Adjective adjective) {
        if (instance == null) {
            instance = new AdjectiveMaintenancePanel(adjective);
        } else {
            instance.setAdjective(adjective);
        }
        
        return instance;
    }
    
    private Adjective adjective;
    private AdjectiveMaintenanceInformation info;

    /** Creates new form AdjectiveMaintenancePanel */
    private AdjectiveMaintenancePanel() {
        initComponents();
        this.adjective = null;
    }
    
    private AdjectiveMaintenancePanel(Adjective adjective) {
        this();
        this.adjective = adjective;
        
        setAdjective(adjective);
    }
    
    public void setAdjective(Adjective adjective) {
        this.adjective = adjective;
        
        titleLabel.setText(adjective.getText());
        this.info = new AdjectiveMaintenanceInformation(adjective, this);
        this.info.evaluateStatus();
    }
    
    public void updateStatus(AdjectiveMaintenanceInformation info) {
        if (info != null) {
            hasCategoryCheckBox.setSelected(info.isHasCategory());
            categoryIsOrphanedCheckBox.setSelected(info.isCategoryIsOrphaned());
            hasConflictingAdjectivesCheckBox.setSelected(info.isHasConflictingAdjectives());
            otherAdjectivesConflictCheckBox.setSelected(info.isOtherAdjectivesConflict());
            anotherCategoryPointsToThisCheckBox.setSelected(info.isAnotherCategoryPointsToThis());
        } else {
            System.out.println("AdjectiveMaintenancePanel.updateStatus(): info=null");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        actionsPanel = new javax.swing.JPanel();
        actionsCenterPanel = new javax.swing.JPanel();
        actionsButtonPanel = new javax.swing.JPanel();
        destroyButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        flagsPanel = new javax.swing.JPanel();
        hasCategoryCheckBox = new javax.swing.JCheckBox();
        categoryIsOrphanedCheckBox = new javax.swing.JCheckBox();
        hasConflictingAdjectivesCheckBox = new javax.swing.JCheckBox();
        otherAdjectivesConflictCheckBox = new javax.swing.JCheckBox();
        anotherCategoryPointsToThisCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        mainPanel.setPreferredSize(new java.awt.Dimension(484, 300));
        mainPanel.setLayout(new java.awt.BorderLayout());

        actionsPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout actionsCenterPanelLayout = new javax.swing.GroupLayout(actionsCenterPanel);
        actionsCenterPanel.setLayout(actionsCenterPanelLayout);
        actionsCenterPanelLayout.setHorizontalGroup(
            actionsCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        actionsCenterPanelLayout.setVerticalGroup(
            actionsCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        actionsPanel.add(actionsCenterPanel, java.awt.BorderLayout.CENTER);

        actionsButtonPanel.setPreferredSize(new java.awt.Dimension(120, 252));

        destroyButton.setText("Destroy");
        destroyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destroyButtonActionPerformed(evt);
            }
        });
        actionsButtonPanel.add(destroyButton);

        actionsPanel.add(actionsButtonPanel, java.awt.BorderLayout.WEST);

        mainPanel.add(actionsPanel, java.awt.BorderLayout.CENTER);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Adjective");
        mainPanel.add(titleLabel, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(closeButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        flagsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));
        flagsPanel.setPreferredSize(new java.awt.Dimension(200, 300));
        flagsPanel.setLayout(new java.awt.GridLayout(5, 1, 2, 4));

        hasCategoryCheckBox.setText("Belongs to a catgory?");
        flagsPanel.add(hasCategoryCheckBox);

        categoryIsOrphanedCheckBox.setText("Category is orphaned?");
        flagsPanel.add(categoryIsOrphanedCheckBox);

        hasConflictingAdjectivesCheckBox.setText("Has conflict relationships?");
        flagsPanel.add(hasConflictingAdjectivesCheckBox);

        otherAdjectivesConflictCheckBox.setText("Others have conflict relations?");
        flagsPanel.add(otherAdjectivesConflictCheckBox);

        anotherCategoryPointsToThisCheckBox.setText("Another category refers to this?");
        flagsPanel.add(anotherCategoryPointsToThisCheckBox);

        getContentPane().add(flagsPanel, java.awt.BorderLayout.WEST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void destroyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destroyButtonActionPerformed
        if (info != null) {
            info.destroyAdjective();
        }
    }//GEN-LAST:event_destroyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdjectiveMaintenancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdjectiveMaintenancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdjectiveMaintenancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdjectiveMaintenancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdjectiveMaintenancePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsButtonPanel;
    private javax.swing.JPanel actionsCenterPanel;
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JCheckBox anotherCategoryPointsToThisCheckBox;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JCheckBox categoryIsOrphanedCheckBox;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton destroyButton;
    private javax.swing.JPanel flagsPanel;
    private javax.swing.JCheckBox hasCategoryCheckBox;
    private javax.swing.JCheckBox hasConflictingAdjectivesCheckBox;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox otherAdjectivesConflictCheckBox;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
